(define (domain blocksworld)
 (:requirements :strips :typing :equality)
 (:types block - object)
 (:predicates
    (on-table ?x - block)
    (on ?x ?y - block)
    (clear ?x - block)
    (holding ?x - block)
    (handempty)
 )
 (:action unstack 
    :parameters (?x ?y - block)
    :precondition (and (on ?x ?y)
                        (clear ?x)
                        (handempty) )
    :effect (and (clear ?y)
                   (holding ?x)
                   (not (clear ?x))
                   (not (handempty))
                   (not (on ?x ?y)) )
 )
 (:action stack
    :parameters (?x ?y - block)
    :precondition (and (holding ?x)
                        (clear ?y) )
    :effect (and (on ?x ?y)
                   (not (clear ?y))
                   (not (holding ?x))
                   (handempty)
                   (clear ?x) )
 )
 (:action pick-up
    :parameters (?x - block)
    :precondition (and (on-table ?x)
                        (handempty)
                        (clear ?x) )
    :effect (and (not (on-table ?x))
                   (not (handempty))
                   (not (clear ?x))
                   (holding ?x) )
 )
 (:action put-down 
    :parameters (?x - block)
    :precondition (and (holding ?x) )
    :effect (and (on-table ?x)
                   (not (holding ?x))
                   (handempty)
                   (clear ?x) )
 )
)  
    

